<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%"
		 addedToStage="group1_addedToStageHandler(event)" currentState="MultipleChoice">
	<s:states>
		<s:State name="Calculator"/>
		<s:State name="MultipleChoice"/>
	</s:states>
	<s:transitions>
		<!--To: check-mark -->
		<s:Transition toState="Calculator" autoReverse="true">
			<s:Fade targets="{ [ calcGroup, comboGroup ] }" duration="500"/>
		</s:Transition>
		
		<!--To: X-mark -->
		<s:Transition toState="MultipleChoice" autoReverse="true">
			<s:Fade targets="{ [ calcGroup, comboGroup ] }" duration="500"/>
		</s:Transition>
	</s:transitions>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
			<s:RadioButtonGroup id="answergroup" change="select_answer(event)" />
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.utils.Console;
			
			import mx.utils.object_proxy;
			
			import events.QuizEvent;
			
			[Bindable]
			public var options:Array = [];
			
			public var answer:String="";
			public var correctAnswer:String;
			
			protected function group1_addedToStageHandler(event:Event):void
			{
				//init();
				
			}
			public function init():void {
//				answer=0;
//				answer0.selected=false;
//				answer1.selected=false;
//				answer2.selected=false;
//				answer3.selected=false;
				numericAnswer.text="";
			}
			public function pushKeypad(num:Number):void {
				answerbut.visible=true;
				var lungo:Number=numericAnswer.text.length;
				if(lungo<4) {
					numericAnswer.text+=String(num);
				}
				answer=String(numericAnswer.text);
			}
			public function backKeypad():void {
				numericAnswer.text=numericAnswer.text.slice(0,-1);
				answer=String(numericAnswer.text);
			}
			public function select_answer(event:Event=null):void {
				Console.log("SELECT ANSWER "+answergroup.selectedValue, this);
				answerPanel.visible=true;
				answer = String( answergroup.selectedValue );				
			}
			public function answerRadioBut(gino:String):void {
				trace("pushed answer"+gino);
				answerPanel.visible=true;
				answer=gino;
			}
			public function randomAnswer():void
			{
				answergroup.selectedIndex = Math.round(Math.random() * options.length);
				select_answer();
				answerQuestion();
				
			}
			protected function answerQuestion(event:MouseEvent=null):void
			{				
				if (String(answer)==String(correctAnswer)) {
					dispatchEvent( new QuizEvent(QuizEvent.CORRECT_ANSWER) );
					Console.log("CORRECT", this);
				} else {
					dispatchEvent( new QuizEvent(QuizEvent.WRONG_ANSWER) );
					Console.log("WRONG", this);
				}
				
			}
			public function makeQuestion(question:Object):void {
				
				
				correctAnswer=String(question.answer);
				if(question.type=="digit") {
					this.currentState="Calculator";
					answerbut.visible=false;
					numericAnswer.text="";
				} else {
					trace("setting up radio buttons"+question.options[1].toString());
					answerPanel.visible=false;
					answergroup.selectedIndex = -1;
					this.currentState="MultipleChoice";
					options = [];
					for (var i:int=0;i<question.options.length;i++)
					{
						options.push( { key: question.options[i].id, value: question.options[i].text, group: answergroup } );
					}
					answerCollection.source = options;
					Console.log( options, this );
//					answer0.label=question.options["1"];
//					answer1.label=question.options["2"];
//					answer2.label=question.options["3"];
//					answer3.label=question.options["4"];
//					
//					answer0.selected=false;
//					answer1.selected=false;
//					answer2.selected=false;
//					answer3.selected=false;
				}
//				trace("question:"+question.@type);
//				trace("question:"+question.@answer);
//				trace("option:"+question.option.length());
//				trace("option 1:"+question.option[1]);
			}
			public function setQuestionText( txt:String ):void
			{
				questionNo.text = txt; 
			}
		]]>
	</fx:Script>
	<s:VGroup>
		
	
	<s:HGroup includeIn="Calculator" id="calcGroup" >
		<s:TileGroup requestedColumnCount="3" horizontalGap="27" verticalGap="19">
			<s:Button skinClass="skins.NumericKeypadButton" label="1" click="pushKeypad(1)" />
			<s:Button skinClass="skins.NumericKeypadButton" label="2" click="pushKeypad(2)"  />
			<s:Button skinClass="skins.NumericKeypadButton" label="3" click="pushKeypad(3)"  />
			<s:Button skinClass="skins.NumericKeypadButton" label="4" click="pushKeypad(4)"  />
			<s:Button skinClass="skins.NumericKeypadButton" label="5" click="pushKeypad(5)"  />
			<s:Button skinClass="skins.NumericKeypadButton" label="6" click="pushKeypad(6)"  />
			<s:Button skinClass="skins.NumericKeypadButton" label="7" click="pushKeypad(7)"  />
			<s:Button skinClass="skins.NumericKeypadButton" label="8" click="pushKeypad(8)"  />
			<s:Button skinClass="skins.NumericKeypadButton" label="9" click="pushKeypad(9)"  />
			<s:Button skinClass="skins.NumericKeypadButton" label="0" click="pushKeypad(0)"  />
			<s:Spacer width="86" height="76"/>
			<s:Button skinClass="skins.ButtonNumericBack" click="backKeypad()" />
		</s:TileGroup>
		<s:Spacer width="70" height="100">
			
		</s:Spacer>
		<s:VGroup>
			<s:TextInput skinClass="skins.TextInputNumber" id="numericAnswer" />
			<s:Spacer width="70" height="76"/>
			<s:Button skinClass="skins.ButtonSky" id="answerbut" label="ANSWER" click="answerQuestion(event)"/>
		</s:VGroup>
	</s:HGroup>
	<s:VGroup includeIn="MultipleChoice" gap="40" id="comboGroup">
		<s:DataGroup id="awnserGroup" itemRenderer="components.RadioButtonRenderer">
			<s:layout>
				<s:VerticalLayout gap="80" useVirtualLayout="true" />
			</s:layout>
			<s:ArrayCollection id="answerCollection" source="{options}" />				
		</s:DataGroup>
		
		<!--<s:RadioButton skinClass="skins.RadioButtonSky" value="1" groupName="sky" id="answer0" selected="false" label="ciao" click="answerRadioBut(1)" />
		<s:RadioButton skinClass="skins.RadioButtonSky" value="2" groupName="sky" id="answer1" selected="false" click="answerRadioBut(2)"  />
		<s:RadioButton skinClass="skins.RadioButtonSky" value="3" groupName="sky" id="answer2" selected="false" click="answerRadioBut(3)"  />
		<s:RadioButton skinClass="skins.RadioButtonSky" value="3" groupName="sky" id="answer3" selected="false" click="answerRadioBut(4)"  />-->
		
		
	</s:VGroup>
		<s:Spacer height="100" />
	<s:VGroup  id="answerPanel" width="90%">
		
		<s:HGroup width="100%" horizontalAlign="center">
			<s:Button skinClass="skins.buttons.SkyRightButton" horizontalCenter="0" id="answerRadio" label="Continue" click="answerQuestion(event)"/>
		</s:HGroup>
		<s:HGroup width="700" horizontalAlign="right" paddingTop="-80">
		<s:Label id="questionNo" fontWeight="bold" color="#ffffff" alpha=".5" fontSize="80" horizontalCenter="100%" />
		</s:HGroup>
	</s:VGroup>
	</s:VGroup>
</s:Group>
